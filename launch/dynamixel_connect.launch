<launch>

    <arg name="dynamixel_port_name" default="/dev/ttyUSB0"/>

    <arg name="use_virtual_odom" default="true"/>
    <arg name="use_local_robot_descriptions" default="$(arg use_virtual_odom)"/>

    <node ns="dynamixel" name="dynamixel_manager" pkg="dynamixel_controllers" type="controller_manager.py" required="true" output="screen">
        <param name="serial_ports/actuator_port/port_name" value="$(arg dynamixel_port_name)"/>
        <rosparam>
            namespace: dxl_manager
            serial_ports:
                actuator_port:
                    baud_rate: 57600
                    min_motor_id: 1
                    max_motor_id: 50
                    update_rate: 15
        </rosparam>
    </node>

    <!-- Load controller configuration to parameter server -->
    <rosparam ns="dynamixel" file="$(find hardware_bridge)/launch/config/neck_joint_controllers.yaml" command="load"/>
    <rosparam ns="dynamixel" file="$(find hardware_bridge)/launch/config/prismatic_joint_controllers.yaml" command="load"/>
    <rosparam ns="dynamixel" file="$(find hardware_bridge)/launch/config/right_arm_joint_controllers.yaml" command="load"/>
    <rosparam ns="dynamixel" file="$(find hardware_bridge)/launch/config/left_arm_joint_controllers.yaml" command="load"/>
    <rosparam ns="dynamixel" file="$(find hardware_bridge)/launch/config/joint_trajectory_controllers.yaml" command="load"/>
    <rosparam ns="dynamixel" file="$(find hardware_bridge)/launch/config/gripper_controllers.yaml" command="load"/>
    
    <!-- start specified joint controllers -->
    <node ns="dynamixel" name="dynamixel_controller_spawner" pkg="dynamixel_controllers" type="controller_spawner.py"
          args="--manager=dxl_manager
                --port=actuator_port
                --type=simple
                pan_controller
                tilt_controller
 
                prismatic_controller

                right_shoulder_1_controller
                right_shoulder_2_controller
                right_elbow_controller
                right_wrist_1_controller
                right_wrist_2_controller
                right_wrist_3_controller
                right_gripper_joint_controller

                left_shoulder_1_controller
                left_shoulder_2_controller
                left_elbow_controller
                left_wrist_1_controller
                left_wrist_2_controller
                left_wrist_3_controller
                left_gripper_joint_controller


                "
          output="screen"/>

    <node ns="dynamixel" name="neck_controller" pkg="dynamixel_controllers" type="controller_spawner.py"
          args="--manager=dxl_manager
                --port=actuator_port
                --type=meta
                neck_controller
                pan_controller
                tilt_controller
               "
          output="screen"/>
          
    <node ns="dynamixel" name="torso_controller" pkg="dynamixel_controllers" type="controller_spawner.py"
          args="--manager=dxl_manager
                --port=actuator_port
                --type=meta
                torso_controller
                prismatic_controller
               "
          output="screen"/>

    <node ns="dynamixel" name="right_arm_controller" pkg="dynamixel_controllers" type="controller_spawner.py"
          args="--manager=dxl_manager
                --port=actuator_port
                --type=meta
                right_arm_controller
                right_shoulder_1_controller
                right_shoulder_2_controller
                right_elbow_controller
                right_wrist_1_controller
                right_wrist_2_controller
                right_wrist_3_controller
               "
          output="screen"/>

    <node ns="dynamixel" name="left_arm_controller" pkg="dynamixel_controllers" type="controller_spawner.py"
          args="--manager=dxl_manager
                --port=actuator_port
                --type=meta
                left_arm_controller
                left_shoulder_1_controller
                left_shoulder_2_controller
                left_elbow_controller
                left_wrist_1_controller
                left_wrist_2_controller
                left_wrist_3_controller
               "
          output="screen"/>

    <node ns="dynamixel" name="right_gripper_controller" pkg="dynamixel_controllers" type="controller_spawner.py"
          args="--manager=dxl_manager
                --port=actuator_port
                --type=meta
                right_gripper_controller
                right_gripper_joint_controller
               "
          output="screen"/>

    <node ns="dynamixel" name="left_gripper_controller" pkg="dynamixel_controllers" type="controller_spawner.py"
          args="--manager=dxl_manager
                --port=actuator_port
                --type=meta
                left_gripper_controller
                left_gripper_joint_controller
               "
    output="screen"/>

    <!-- publish virtual odom if needed  -->
    <node if="$(arg use_virtual_odom)" pkg="tf" type="static_transform_publisher" name="virtual_odom_tf" args="0.0 0.0 0.0 0.0 0.0 0.0 odom_combined base_link 100"/>

    <!-- Publish transform  -->
    <include if="$(arg use_local_robot_descriptions)" file="$(find hardware_bridge)/launch/robot_state_publisher.launch"/>

</launch>
